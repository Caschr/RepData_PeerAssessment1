hist(stepsum)
library(ggplot2)
qplot(steps, df, geom="histogram")
qplot(step, df, geom="histogram")
qplot(stepsum,  geom="histogram")
qplot(stepsum,  geom="histogram", binwidth=1)
qplot(stepsum,  geom="histogram", binwidth=10)
qplot(stepsum,  geom="histogram", binwidth=50)
qplot(stepsum,  geom="histogram", binwidth=30)
qplot(stepsum,  geom="histogram", binwidth=1000)
qplot(stepsum,  geom="histogram", binwidth=100)
qplot(stepsum,  geom="histogram", binwidth=800)
qplot(stepsum,  geom="histogram", binwidth=700)
qplot(stepsum,  geom="histogram", binwidth=600)
qplot(stepsum,  geom="histogram", binwidth=500)
qplot(stepsum,  geom="histogram", binwidth=600)
ggplot2(stepsum, aes(x=steps))
pl <- ggplot(stepsum, aes(x=steps))
pl <- ggplot(aes(x=steps))
pl <- ggplot(stepsum, aes(x=steps))
qplot(stepsum,  geom="histogram", binwidth=600, geom_density)
stepsum
class(stempsum)
class(stepsum)
as.vector(stepsum)
qplot(as.vector(stepsum),  geom="histogram", binwidth=600, geom_density)
stepsum <- as.numeric(tapply(df$step, df$date, sum, na.rm=TRUE))
hist(stepsum)
hist(stepsum, breaks=10)
hist(stepsum, breaks=20)
hist(stepsum, breaks=50)
hist(stepsum, breaks=20)
hist(stepsum, breaks=20, main = "Number of steps pr. day", xlab="Steps", ylab="Count")
hist(stepsum, breaks=20, main = "Number of steps pr. day", xlab="Steps", ylab="Count", color="green")
hist(stepsum, breaks=20, main = "Number of steps pr. day", xlab="Steps", ylab="Count", col="green")
mean(stepsum)
median(stepsum)
?scipen
?options
scipen=6
options(scipen=6)
df <- read.csv(file="activity/activity.csv", colClasses = c("factor", "factor", "number"))
df <- read.csv(file="activity/activity.csv"
)
View(df)
df <- read.csv(file="activity/activity.csv", colClasses=c("number", "factor", "factor"))
df <- read.csv(file="activity/activity.csv", colClasses=c("integer", "factor", "factor"))
str(df$interval)
seq(from = 0, by = 5, along=df$interval )
seq(from = 0, by = 5, along=length(df$interval)
)
seq(from = 0, by = 5, along.with=length(df$interval)
)
seq(from = 0, by = 5, length.out=288
)
df$interval
df$interval[1:288]
levels(df$interval) <- df$interval[1:288]
df$interval[1:288]
intervalsum <- tapply(df$steps, df$interval, sum, rm.NA=TRUE)
intervalsum <- tapply(df$steps, df$interval, sum, na.rm=TRUE)
intervalsum <- tapply(df$steps, df$interval, sum, na.rm=TRUE, simplify=FALSE)
plot(intervalsum, type=l)
intervalsum <- tapply(df$steps, df$interval, sum, na.rm=TRUE)
plot(intervalsum, type=l)
plot(intervalsum, type="l")
intervalsum <- as.numeric(tapply(df$steps, df$interval, sum, na.rm=TRUE))
plot(levels(df$interval), intervalsum, type="l")
levels(df$interval)
substr("2230", 1, 2)
converttime <- function(input) {
if(length(input)==1){
paste("00", paste("0", input, sep=""), sep=":")
}
elseif (length(input)==2) {
paste("00", input, sep=":")
}
elseif(length(input)==3) {
paste(paste("0", substr(input, start=1, stop=1), sep=""), substr(input, start=2, stop=3, sep=":")
}
elseif(length(input)==4) {
paste(substr(input, start=1, stop=2), substr(input, start=3, stop=4), sep=":")
}
}
converttime <- function(input) {
if(length(input)==1){
paste("00", paste("0", input, sep=""), sep=":")
}
elseif (length(input)==2) {
paste("00", input, sep=":")
}
elseif(length(input)==3) {
paste(paste("0", substr(input, start=1, stop=1), sep=""), substr(input, start=2, stop=3, sep=":"))
}
elseif(length(input)==4) {
paste(substr(input, start=1, stop=2), substr(input, start=3, stop=4), sep=":")
}
}
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
sapply(df$interval, converttime)
sapply(df$interval, converttime())
sapply(df$interval, converttime
)
interval <- sapply(df$interval, converttime)
converttime("=")
converttime("0")
converttime("5")
converttime("50")
converttime("50")
converttime("135")
length("135")
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
converttime("5")
length("135")
length("135")
converttime("135")
source('C:/Users/Casper/Dropbox/Coursera/5 - Reproducible Research/1.R')
converttime("135")
converttime("35")
converttime("1135")
interval <- sapply(df$interval, converttime)
View(df)
df <- read.csv(file="activity/activity.csv", colClasses = c("number", "factor", "character"))
df <- read.csv(file="activity/activity.csv", colClasses = c("integer", "factor", "character"))
interval <- sapply(df$interval, converttime)
interval
str(interval)
as.character(interval)
df$interval <- as.character(sapply(df$interval, converttime))
View(df)
plot(df$interval, df$steps)
intervalsum <- as.numeric(tapply(df$steps, df$interval, sum, na.rm=TRUE))
plot(df$interval, intervalsum)
factor(df$intervals)
as.factor(df$intervals)
as.factor(df$interval)
df$interval <- as.factor(df$interval)
plot(levels(df$interval), intervalsum)
levels(df$interval)
plot(df$interval, df$steps)
plot(df$interval, df$steps, type="l")
plot(levels(df$interval), intervalsum, type="l")
intervalsum
class(intervalsum)
class(levels(df$interval))
plot(as.POSIXct(df$interval), intervalsum, type="l")
as.POSIXct(df$interval)
as.POSIXct(df$interval, format="%H:%M")
as.POSIXct(levels(df$interval), format="%H:%M")
plot(as.POSIXct(levels(df$interval), format="%H:%M"), intervalsum, type="l")
qplot(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum, geom="l")
library(ggplot2)
qplot(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum, geom="l")
qplot(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum, geom=1)
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum,, data=df geom=1)
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df geom=1)
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df, geom=1)
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df)
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df, geom_line)
qplot(geom_line(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df))
qplot(x=as.POSIXct(levels(interval), format="%H:%M"), y=intervalsum, data=df, geom_line)
ggplot2(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+geom_line()
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+geom_line()
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() +
scale_x_date(labels = date_format("%H:%M"))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() +
scale_x_date(labels = date_format("%H:%M"))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_date(labels = date_format("%H:%M"))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_date(labels = date_format("%H:%M"))
library(scales)
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_date(labels = date_format("%H:%M"))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_date(labels = date_format("%H:%M"))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_datetime(labels = date_format("%H:%M"))
intervalsum1 <- tapply(df$steps, df$interval, sum, na.rm=TRUE
)
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + xlab="Time of the day" + ylab="Steps"
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + xlab=("Time of the day") + ylab=("Steps")
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"), y=intervalsum))+ geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + xlab("Time of the day") + ylab("Steps")
df$interval[1:288]
df$interval <- as.factor(x=df$interval, levels=df$interval[1:288])
df$interval <- factor(x=df$interval, levels=df$interval[1:288])
permwd <- getwd() ## As we change the wd, we keep the original
temp <- tempfile()
unzip("activity.zip", exdir=temp)
setwd(temp)
df <- read.csv(file="activity.csv", colClasses = c("integer", "factor", "character"))
## Converts the intervals into true time stamps and makes them a factor
df$interval <- as.character(df$interval, function(input) {
if(nchar(input) == 1) {
paste("00", paste("0", input, sep=""), sep=":")
}
else if (nchar(input) == 2) {
paste("00", input, sep=":")
}
else if(nchar(input)==3) {
paste(paste("0", substr(input, start=1, stop=1), sep=""), substr(input, start=2, stop=3), sep=":")
}
else if(nchar(input)==4) {
paste(substr(input, start=1, stop=2), substr(input, start=3, stop=4), sep=":")
}
})
df$interval <- factor(x=df$interval, levels=df$interval[1:288])
unlink(temp, recursive=TRUE) ## Deletes the temp file
setwd(permwd)
permwd <- getwd() ## As we change the wd, we keep the original
temp <- tempfile()
unzip("activity.zip", exdir=temp)
setwd(temp)
df <- read.csv(file="activity.csv", colClasses = c("integer", "factor", "character"))
## Converts the intervals into true time stamps and makes them a factor
df$interval <- as.character(sapply(df$interval, function(input) {
if(nchar(input) == 1) {
paste("00", paste("0", input, sep=""), sep=":")
}
else if (nchar(input) == 2) {
paste("00", input, sep=":")
}
else if(nchar(input)==3) {
paste(paste("0", substr(input, start=1, stop=1), sep=""), substr(input, start=2, stop=3), sep=":")
}
else if(nchar(input)==4) {
paste(substr(input, start=1, stop=2), substr(input, start=3, stop=4), sep=":")
}
}))
df$interval <- factor(x=df$interval, levels=df$interval[1:288])
unlink(temp, recursive=TRUE) ## Deletes the temp file
setwd(permwd)
View(df)
intervalmean <- tapply(df$steps, df$interval, mean, na.rm=TRUE)
summary(intervalmean)
max(intervalsum)
max(intervalmean)
which.max(intervalmean)
which.max(intervalmean)
which.max(intervalmean[1])
which.max(intervalmean[,1])
which.max(as.numeric(intervalmean))
summary(intervalmean)
str(intervalmean)
as.numeric(intervalmean)
max(as.numeric(intervalmean))
which.max(as.numeric(intervalmean))
which.max(intervalmean)
max(intervalmean)
intervalmean[104]
maxstep <- intervalmean[104]
maxstep
intervalmean$names[104]
names(intervalmean[104])
numberna <- sum(is.na(df$steps))
numberna
sapply(df, function(x) if(df$steps==NA) {df$steps = intervalmean[df$interval]})
length(df)
nrows(df)
nrow(df)
dfNA <- df
for(i in 1:nrow(dfNA$steps)) {
if (dfNA[i,1] == NA) {
dfNA = intervalmean[dfNA[i,3]]
}
}
1:nrow(dfNA$steps)
dfNA <- df
for(i in 1:nrow(dfNA)) {
if (dfNA[i,1] == NA) {
dfNA = intervalmean[dfNA[i,3]]
}
}
is.na(df$steps)
stepsna <-is.na(df$steps)
stepsna[1]
intervalmean["00:00"]
is.numeric(intervalmean["00:00"])
as.numeric(intervalmean["00:00"])
dfNA <- df
stepsna <- is.na(dfNA$steps)
for(i in 1:nrow(dfNA$steps)) {
if (stepsna[i]) {
dfNA$steps[i] = intervalmean[dfNA[i,3]]
}
}
1:20
1:nrows(df)
1:nrow(df)
dfNA <- df
stepsna <- is.na(dfNA$steps)
for(i in 1:nrow(dfNA)) {
if (stepsna[i]) {
dfNA$steps[i] = intervalmean[dfNA[i,3]]
}
}
histogram <-hist(stepsum, breaks=20, main = "Number of steps pr. day", xlab="Steps",
ylab="Count", col="green")
histogram <-hist(dfNA$steps, breaks=20, main = "Number of steps pr. day", xlab="Steps",
ylab="Count", col="green")
print(histogram)
par(fig.width)
par("fig.width")
mean(dfNA$steps)
stepsumNoNA <- as.numeric(tapply(dfNA$step, df$date, sum))
mean(stepsumNoNA)
median(stepsumNoNA)
plot(stepsumNoNA)
round(median(stepsumNoNA), 10)
dfdate <- as.POSIXlt(dfNA$date)
dfdate$wday[1:10]
dfdate$wday[1:100]
dfdate$wday[1:229]
dfdate$wday[1:289]
posixwday <- dfdate$wday
posixdate <- as.POSIXlt(dfNA$date)
weekday <- df$posixdate$wday
for (i in 1:length(weekday)) {
if (weekday[i] == 0 | weekday[i] == 6)
dfNA$weekday[i] = "weekend"
}
else {dfNA$weekday[i] = "weekday"}
}
posixdate <- as.POSIXlt(dfNA$date)
weekday <- df$posixdate$wday
for (i in 1:length(weekday)) {
if (weekday[i] == 0 | weekday[i] == 6) {
dfNA$weekday[i] = "weekend"
}
else {dfNA$weekday[i] = "weekday"}
}
posixdate <- as.POSIXlt(dfNA$date)
weekday <- posixdate$wday
for (i in 1:length(weekday)) {
if (weekday[i] == 0 | weekday[i] == 6) {
dfNA$weekday[i] = "weekend"
}
else {dfNA$weekday[i] = "weekday"}
}
View(dfNA)
table(dfNA$weekdays)
table(dfNA$weekday)
dfNA$weekday <- as.factor(dfNA$weekday)
dfweekday <- strsplit(dfNA, dfNA$weekday)
dfweekday <- split(dfNA, dfNA$weekday)
str(dfsplit[1])
str(dfweekday[1])
str(dfweekday[1]["interval"])
head(dfweekday[1]["interval"])
head(dfweekday[1][interval])
head(dfweekday[[1][interval])
head(dfweekday[[1]["interval"])
head(dfweekday[[1][,3])
head(dfweekday[[1]][,3])
head(dfweekday[[1]]["interval"])
posixdate <- as.POSIXlt(dfNA$date)
weekday <- posixdate$wday
for (i in 1:length(weekday)) {
if (weekday[i] == 0 | weekday[i] == 6) {
dfNA$weekday[i] = "weekend"
}
else {dfNA$weekday[i] = "weekday"}
}
dfNA$weekday <- as.factor(dfNA$weekday)
dfsplit <- split(dfNA, dfNA$weekday)
head(dfsplit[1][["steps"]])
head(dfsplit[[1]]["steps"])
intervalweekday <- tapply(dfsplit[[1]]["steps"], dfsplit[[1]]["interval"], mean)
length(dfsplit[[1]]["steps"])
nrows(dfsplit[[1]]["steps"])
nrow(dfsplit[[1]]["steps"])
nrow(dfsplit[[1]]["interval"])
class(dfsplit[[1]]["interval"])
class(df$interval)
head(dfsplit[[1]]["interval"])
head(dfsplit[[1]][[["interval"])
head(dfsplit[[1]][[["interval"])
head(dfsplit[[1]][["interval"]])
intervalweekday <- tapply(dfsplit[[1]][["steps"]], dfsplit[[1]][["interval"]], mean)
head(df(intervalweekday, "weekday"))
head(data.frame(intervalweekday, "weekday"))
head(data.frame(intervalweekday, weekday="weekday"))
head(data.frame(interval=names(intervalweekday), val=intervalweekday, weekday="weekday"))
dfweekday <- data.frame(interval=names(intervalweekday),
val=intervalweekday,
weekday="weekday")
dfweekend <- data.frame(interval=names(intervalweekday),
val=intervalweekday,
weekday="weekend")
dfcomplete <- rbind(dfweekday, dfweekend)
View(dfcomplete)
ggplot(dfcomplete,
aes(x=as.POSIXct(levels(dfcomplete$interval), format="%H:%M"),
y=val) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .)
)
levels(dfcomplete$interval
)
ggplot(dfcomplete,
aes(x=as.POSIXct(levels(dfcomplete$interval), format="%H:%M"),
y=val) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
ggplot(dfcomplete,
aes(x=as.POSIXct(levels(dfcomplete$interval), format="%H:%M"),
y=dfcomplete$val) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
ggplot(dfcomplete,
aes(x=as.POSIXct(levels(dfcomplete$interval), format="%H:%M"),
y=as.numeric(val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
as.POSIXct(levels(dfcomplete$interval), format="%H:%M")
ggplot(dfcomplete,
aes(x=as.POSIXct(dfcomplete$interval, format="%H:%M"),
y=as.numeric(val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
ggplot(dfcomplete,
aes(x=as.POSIXct(interval, format="%H:%M"),
y=as.numeric(val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
as.POSIXct(interval, format="%H:%M")
as.POSIXct(dfcomplete$interval, format="%H:%M")
ggplot(dfcomplete,
aes(x=as.POSIXct(dfcomplete$interval, format="%H:%M"),
y=as.numeric(dfcomplete$val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
ggplot(dfcomplete,
aes(x=as.POSIXct(dfcomplete$interval, format="%H:%M"),
y=as.numeric(dfcomplete$val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps"))
ggplot(dfcomplete,
aes(x=interval,
y=as.numeric(dfcomplete$val)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .))
ggplot(df, aes(x=as.POSIXct(levels(df$interval), format="%H:%M"),
y=as.numeric(intervalmean))) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps")
ggplot(dfcomplete, aes(x=as.POSIXct(dfcomplete$interval, format="%H:%M"),
y=as.numeric(dfcomplete$val))) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps")
ggplot(dfcomplete, aes(x=as.POSIXct(dfcomplete$interval, format="%H:%M"),
y=as.numeric(dfcomplete$val))) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"),
breaks=date_breaks("2 hour")) +
xlab("Time of the day") +
ylab("Steps") + facet_grid(weekday ~ .)
posixdate <- as.POSIXlt(dfNA$date)
weekday <- posixdate$wday
for (i in 1:length(weekday)) {
if (weekday[i] == 0 | weekday[i] == 6) {
dfNA$weekday[i] = "weekend"
}
else {dfNA$weekday[i] = "weekday"}
}
dfNA$weekday <- as.factor(dfNA$weekday)
dfsplit <- split(dfNA, dfNA$weekday)
intervalweekday <- tapply(dfsplit[[1]][["steps"]],
dfsplit[[1]][["interval"]], mean)
intervalweekend <- tapply(dfsplit[[2]][["steps"]],
dfsplit[[2]][["interval"]], mean)
dfweekday <- data.frame(interval=names(intervalweekday),
val=intervalweekday,
weekday="weekday")
dfweekend <- data.frame(interval=names(intervalweekend),
val=intervalweekday,
weekday="weekend")
dfcomplete <- rbind(dfweekday, dfweekend)
View(dfcomplete)
